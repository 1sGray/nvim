# Keymaps {{{
## Movement

## cheatsheet @quick @reference
Open (in telescope if installed)     | <leader>?
Open user cheatsheet from Telescope  | <C-E>
Toggle default cheatsheet Telescope  | <C-D>

## telescope @fuzzy @fzf
Close                                | <C-C>
Toggle selection                     | <Tab>
Open file in tab                     | <C-T>
Open file in split                   | <C-X>
Open file in vsplit                  | <C-V>
Scroll up in preview window          | <C-U>
Scroll down in preview window        | <C-D>
Send to quickfix list                | <C-Q>
Send selected items to quickfix list | <M-Q>

## tree-sitter
init selection                       | <leader>ss
node incremental                     | <leader>ins
scope incremental                    | <leader>scs
node decremental                     | <leader>des

## nvim-lspconfig
go to definition                     | <C-J>
omni mode completion                 | <C-X><C-O>
LSP formatting                       | gq

## mini.align
start align                          | ga
start align with preview             | gA
enter split pattern                  | s
choose justify side                  | j
enter merge delimiter                | m

## mini.comment
comment                              | gc
comment line                         | gcc
comment in visual mode               | gc

## mini.move
left                                 | <M-h>
right                                | <M-l>
up                                   | <M-k>
down                                 | <M-j>

## mini.surround
Add surrounding in Normal and Visual modes | sa
Delete surrounding | sd
Find surrounding (to the right) | sf
Find surrounding (to the left) | sF
Highlight surrounding | sh
Replace surrounding | sr

## mini.files
Info | g?

## Precognition.nvim
Toggles hints on and off | <leader>pt

## file-vim @default
Reopen last opened file              | <C-o><C-o>
Open with external app               | gx
Save and quit (window)               | ZZ
Quit without saving                  | ZQ

## edit-vim @default
Back to normal mode                  | <Esc>
Cancel command/operation             | <C-c>
Insert at cursor pos.                | i
Append after cursor                  | a
Insert at start of line              | I
Append at end of line                | A
Open new line below                  | o
Open new line above                  | O
Replace character with {c}           | r{c}
Replace mode/overwrite               | R
Change                               | c
Replace line                         | cc
Repeat last command                  | .
Undo                                 | u
Redo                                 | <C-r>
Next text state                      | g+
Prev text state                      | g-
Cut                                  | d
Cut into register {r}                | "{r}d
Cut into OS clipboard                | "*d
Cut {n} lines                        | {n}dd
Cut until EOL                        | D
Cut {n} characters forward
Cut {n} characters backwards         | {n}X
Copy                                 | y
Copy into register {r}               | "{r}y
Copy into OS clipboard               | "*y
Copy {n} lines                       | {n}yy
Copy until EOL                       | y$
Paste after cursor                   | p
Paste before cursor                  | P
Paste from register {r}              | "{r}p
Paste from register {r}              | <C-r>{r}
Paste from OS clipboard              | "*p
Paste after and align                | ]p
Paste before and align               | ]P
Visual mode (select)                 | v
Linewise visual mode                 | V
Block visual mode                    | <C-v>
Insert in selected lines             | <C-v>{Move}I
Append to selected lines             | <C-v>{Move}A
Change in selected lines             | <C-v>{Move}c
Delete in selected lines             | <C-v>{Move}x
Reselect visual                      | gv
Select all                           | ggVG
Delete previous word                 | <C-w>
Erase line before cursor             | <C-u>
Record macro into register {r}       | q{r}
Stop recording macro                 | q
Run recorded macro in register {r}   | @{r}
Repeat last macro                    | @@
Repeat last Ex command               | @:

## text-objects-vim @default
Around word                          | aw
Inside word                          | iw
Around WORD                          | aW
Inside WORD                          | iW
Around sentence                      | as
Inside sentence                      | is
Around paragraph                     | ap
Inside paragraph                     | ip
Around parentheses                   | a( , ab
Inside parentheses                   | i( , ib
Around brackets                      | a[
Inside brackets                      | i[
Around braces                        | a{ , zB
Inside braces                        | i{ , iB
Around (XML) tags                    | at
Inside (XML) tags                    | it
Around < and >                       | a<
Inside < and >                       | i<
Around double quotes                 | a"
Inside double quotes                 | i"
Around simple quotes                 | a'
Inside simple quotes                 | i'
Around backticks                     | a`
Inside backticks                     | i`

## text-manipulation-vim @default
Change to uppercase                  | gU
Change to lowercase                  | gu
Uppercase line                       | gUU
Lowercase line                       | guu
Change to uppercase                  | U
Change to lowercase                  | u
Toggle case                          | ~
Toggle case                          | ~
Indent (. to repeat)                 | >
Unindent (. to repeat)               | <
Reindent                             | =
Indent line (. repeats)              | >>
Unindent (. repeats)                 | <<
Reindent line                        | ==
Indent line (insert mode)            | <C-t>
Unindent line (insert mode)          | <C-d>
Hard-wrap (cursor moves)             | gq
Hard-wrap (cursor stays)             | gw
Format current line                  | gww
Join with next line                  | J
Join next line preserve spaces       | gJ
Autocomplete (search forward)        | <C-n>
Autocomplete (search backwards)      | <C-p>
Omnicomplete                         | <C-x><C-o>
Line autocomplete                    | <C-x><C-l>
Insert digraph                       | <C-k>{c}{c}
Insert calculated expr.              | <C-r>=
Increment number by {n}              | {n}<C-a>
Decrement number by {n}              | {n}<C-x>

## spell-vim @default
To next misspelled word              | ]s
To prev misspelled word              | [s
Suggest corrections (normal mode)    | z=
Suggest corrections (insert mode)    | <C-x>s
Permanently mark as correct          | zg
Undo mark as correct                 | zug
Temporarily mark as correct          | zG
Permanently mark as incorrect        | zw
Undo mark as incorrect               | zuw
Temporarily mark as incorrect        | zW

## navigation-vim @default
Scroll down a page                   | <C-f>
Scroll up a page                     | <C-b>
Scroll down half a page              | <C-d>
Scroll up half a page                | <C-u>
Scroll down a bit                    | <C-e>
Scroll up a bit                      | <C-y>
Scroll horizontally right            | {n}zl
Scroll horizontally left             | {n}zh
Scroll horizontally half a screen    | zL
Scroll horizontally half a screen    | zH
Scroll line to top                   | zt
Scroll to bottom                     | zb
Scroll to center                     | zz
Unfold all                           | zR
Edit last edited file                | <C-^>
Get file info                        | <C-g>
Character info                       | ga
Go to file under cursor              | gf
Line/word/char count                 | g<C-g>
Cycle match groups (eg. if,else,end) | g%

## search-vim @default
Search forward for {P}               | /{P}
Search backward for {P}              | ?{P}
Go to next match                     | n
Go to previous match                 | N
Select up to next match              | gn
Select up to prev match              | gN
Search word under cursor backward    | *
Search word under cursor forward     | #
Go to next match during search       | <C-G>
Go to previous match during search   | <C-T>
Next command (command mode)          | <C-n>
Prev command (command mode)          | <C-p>
Browse command history               | q:
Browse search patterns               | q/
Next difference                      | ]c
Prev difference                      | [c
Diff put                             | dp
Diff obtain                          | do

## movement-vim @default
Left                                 | h
Right                                | l
Up                                   | k
Down                                 | j
Up (honor soft-wrapping)             | gk
Down (honor soft-wrapping)           | gj
Start of next word                   | w
Start of prev word                   | b
End of next word                     | e
End of prev word                     | ge
Start of next WORD                   | W
Start of prev WORD                   | B
End of next WORD                     | E
End of prev WORD                     | gE
Start of line                        | 0
End of line                          | $
This line 1st non-blank              | ^
Next line 1st non-blank              | +
Prev line 1st non-blank              | -
First line                           | gg
Last line                            | G
Next {c} in this line                | f{c}
Just before next {c}                 | t{c}
Prev {c} in this line                | F{c}
Just after prev {c}                  | T{c}
Repeat f/t/F/T forward               | ;
Repeat f/t/F/T backward              | ,
Prev pos in change list              | g;
Next pos in change list              | g,
Go to line {n}                       | :{n}
Go to column {n}                     | {n}   |
Jump to line {n}                     | {n}G
Jump to next blank line              | }
Jump to prev blank line              | {
Jump to begin of block               | [{
Jump to end of block                 | ]}
Jump to end of sentence              | )
Jump to beg. of sentence             | (
Jump to end of section               | ]]
Jump to beg. of section              | [[
Jump to top of window                | H
Jump to middle                       | M
Jump to bottom                       | L
Jump to matching delim               | %
Jump to older tag                    | <C-t>
Jump to tag definition               | <C-]>
Jump to tag definition, show choices | g]
Jump or show choices                 | g<C-]>
Set mark {c}                         | m{c}
Jump to mark at {c}                  | `{c}
Jump to definition                   | gd
To prev jump position                | <C-o>
To next jump position                | <C-i>
Go to last insertion and INSERT      | gi

## folds-vim @default
Go to start of next fold             | zj
Go to end of previous fold           | zk
Open fold under cursor               | zo
Open all folds under cursor          | zO
Close fold under cursor              | zc
Close all folds under cursor         | zC
Toggle fold under cursor             | za
Toggle all folds under cursor        | zA
Open folds to show cursor line       | zv
Close all folds                      | zM
Open all folds                       | zR
Fold more                            | zm
Fold less                            | zr
Update folds                         | zx

## window-vim @default
New horizontal split                 | <C-w><C-n>
Close window                         | <C-w>c
Close inactive windows               | <C-w><C-o>
Split horizontally                   | <C-w>s
Split vertically                     | <C-w><C-v>
Exchange windows                     | <C-w><C-x>
Move to the very top                 | <C-w>K
Move to the very bottom              | <C-w>J
Move to the far right                | <C-w>L
Move to the far left                 | <C-w>H
Cycle through windows                | <C-w><C-w>
Back to previous window              | <C-w><C-p>
Edit window to the left              | <C-w><C-h>
Edit window below                    | <C-w><C-j>
Edit window above                    | <C-w><C-k>
Edit window to the right             | <C-w><C-l>
Edit top window                      | <C-w><C-t>
Edit bottom window                   | <C-w><C-b>
All windows same size                | <C-w>=
Maximize height                      | <C-w>_
Maximize width                       | <C-w> |
Decrease height                      | <C-w>-
Increase height                      | <C-w>+
Decrease width                       | <C-w><
Increase width                       | <C-w>>

## tabs-vim @default
Next tab                             | gt
Previous tab                         | gT
Go to tab {n}                        | {n}gt
Move window to new tab               | <C-w>T

## filename-modifiers-vim @default
Full path                            | %:p
Relative to $HOME                    | %:~
Relative to current directory        | %:.
Filename only (tail)                 | %:t
Remove last extension (get root)     | %:r
Extension only                       | %:e
Escape special chars (use in shell)  | %:S
Substitute first                     | %:s?pat?sub?
Substitute all                       | %:gs?pat?sub?
Get directory of file                | %:p:h

# }}}

# Commands {{{

## cheatsheet @quick @reference
Open (in telescope if installed)     | :Cheatsheet
Force open in floating window        | :Cheatsheet!
Open user cheatsheet                 | :CheatsheetEdit

## file-vim @default
New untitled document                | :enew
New/open file or dir                 | :e {file}
Split open (horizontal)              | :sp [file]
Split open (vertical)                | :vs [file]
Close file                           | :bd
Close all                            | :%bd
Save                                 | :w
Save (only if modified)              | :up
Save as                              | :sav {filename}
Save all                             | :wa
Save read-only file                  | :w!
Save session                         | :mks
Restore session                      | :so Session.vim
Reload file from disk                | :e
Revert to last saved                 | :e!
Convert buffer to HTML               | :TOhtml
Print document                       | :hardcopy
Quit (window)                        | :q
Save and quit (window)               | :x
Quit without saving                  | :q!
Save all and exit Vim                | :xa
Exit Vim without saving              | :qa!

## edit-vim @default
Cut all                              | :%d
Copy all                             | :%y
Run {Cmd} in all buffers             | :bufdo {Cmd}

## text-manipulation-vim @default
Use hard tabs                        | :set noet
Use soft tabs (spaces)               | :set et
Detab (needs 'et' on)                | :retab
Entab (needs 'et' off)               | :retab!
Set text width to {n}                | :set tw={n}
Sort selected lines                  | :sort
Sort+remove duplicates               | :sort u
Run macro in reg {r} for each line   | :norm @{r}
Run {Cmd} on lines matching {P}      | :g/{P}/{Cmd}

## spell-vim @default
Toggle spell checking                | :setl spell!

## navigation-vim @default
Toggle soft-wrapping                 | :setl wrap!
Page guide at column {n}             | :setl cc={n}
No page guide                        | :setl cc=
Toggle line numbers                  | :setl nu!
Toggle relative line numbers         | :setl rnu!
Toggle invisibles                    | :setl list!
Show files                           | :ls
Edit buffer (autocomplete)           | :b <Tab>
Edit buffer {n}                      | :b{n}
Edit next buffer                     | :bn
Edit prev buffer                     | :bp
Edir prev in arg list                | :prev
Edir next in arg list                | :next
Toggle cursorline                    | :setl cul!
Toggle search highlight              | :setl hls!

## movement-vim @default
Go to line {n}                       | :{n}
Jump to specified tag                | :tag [tagname]
To next matching tag                 | :tn
To prev matching tag                 | :tp
View all marks                       | :marks
Remove marks                         | :delmarks {mark}

## window-vim @default
New horizontal split                 | :new
New vertical split                   | :vnew
One window per file                  | :ball
Execute {Cmd} in all windows         | :windo {Cmd}

## tabs-vim @default
New untitled tab                     | :tabnew
New/open in tab                      | :tabe [file]
Close tab                            | :tabc
Close all other tabs                 | :tabo
List tabs                            | :tabs
Open one tab per buffer              | :tab ball
Execute {Cmd} in all tabs            | :tabdo {Cmd}

## help-vim @default
Help                                 | :h [helptag]
Help search                          | :helpgrep {searchterm}
Help on highlight test               | :h hitest.vim
View mappings                        | :map [mapping]
View Insert mode mappings            | :imap [mapping]
View registers                       | :reg
List of sourced files                | :scr
List of digraphs                     | :digraphs
List all syntax items                | :syn

## misc-vim @default
Show current directory               | :pwd
Change directory                     | :cd {dir}
Change to home directory             | :cd
Show value of {Var}                  | :echo {Var}
Show value of option                 | :set {Opt}?

# }}}
